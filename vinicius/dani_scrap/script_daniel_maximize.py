# -*- coding: utf-8 -*-
"""script - daniel - maximize

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k1gPHyB1cpVr2_nMhKySBdbNyX-3hw9I
"""

# Commented out IPython magic to ensure Python compatibility.
# importar bibliotecas
# %pip install scrapy
import scrapy
import json
import requests
import csv

# acessa a url, faz as requisições pelo request e retorna, permitindo a raspagem de dados
url = 'https://www.maximizeimobiliaria.com.br/imovel/venda/casa/toledo-pr/vila-pioneiro/casa-a-venda--localizada-na-vila-pioneiro--toledo---pr-valor-r--290-000-00/851846'
dados_coletados = []

html_content= requests.get(url).text

response = scrapy.http.HtmlResponse(url = url, body = html_content, encoding = "utf-8")

# Acessa o HTML pelo div em destaque para capturar o código de referência do imóvel
for ref in response.css("div.text-xl-exebicao.color-dark-100-exebicao"):
    referencia = ref.css("span::text").get()
# Define as informações do imóvel como None (nulo) para que possam ser preenchidas pela raspagem
quartos = None
suites = None
garagem = None
area_imovel = None
'''
Acessa o div que contém várias informações sobre o imóvel.
Esse trecho foi feito para capturar apenas as informações relevantes.
Se alguma informação não estiver presente (ex.: o imóvel não tem garagem),
o valor retornado será None, já que foi definido dessa forma antes.
'''
informacao = response.css("div.details-property-description-exebicao p::text").getall()
quartos = next((d for d in informacao if "quarto" in d.lower()), None)
suites = next((d for d in informacao if "suite" in d.lower() or "suíte" in d.lower()), None)
garagem = next((d for d in informacao if "garagem" in d.lower()), None)
area_imovel = next((d for d in informacao if "m²" in d.lower()), None)

'''O next vai capturar o primeiro item da lista definido na condição do código,
retornando o texto completo em que a palavra aparece.
Exemplo:
- Se o item da lista for "Quartos 2", o retorno será "Quartos 2".
- Se o item for "Este imóvel possui 1 quarto e 2 suítes",
  o retorno será exatamente essa frase, sem alterações.
'''

'''aramzena as informações geradas pela rapagem na parte superior num unico local especialmente numa lista[],
 para ser possivel salvas em csv'''

dados_coletados = [{
    "Referencia": referencia,
    "Quartos": quartos,
    "Suites": suites,
    "Garagem": garagem,
    "Area do Imovel": area_imovel
}]

#salva em cvs num arquivo chamado informaçoes
with open("./vinicius/dani_scrap/informaçôes Maximalize.csv",'w',newline='',encoding='utf-8') as f:
  writer= csv.writer(f)
  writer.writerow(["Referencia","Quartos","Suites","Garagem","Area do Imovel"])
  for dado in dados_coletados:
    writer.writerow([dado["Referencia"],dado["Quartos"],dado["Suites"],dado["Garagem"],dado["Area do Imovel"]])
  print("salvo em csv")